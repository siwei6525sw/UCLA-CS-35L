Christopher Aziz
304806012

Homework: Learning to use Emacs
-------------------------------
After copying the url to the webpage of assign1.html:
w g e t SP Commmand-v Enter
c p SP a Tab e x e r 1 . h t m l Enter
^ r 1 ^ r 2 Enter
^ r 2 ^ r 3 Enter

Excercise 1.1
-------------
1. (instructions say this is implicit)
2. C-s p u M-f
3. C-s l a M-b
4. C-s s e l f M-b
5. C-s a r r o w M-b
6. C-e
7. C-a
8. Yes, I did not do those lame things.
9. Nope.
10. C-x C-c

Excercise 1.2
-------------
1. (implicit)
2. C-u 18 C-n C-k
3. C-s D E C-a C-k
4. C-s e n . C-s C-a C-k C-k C-k C-p C-k
5. C-s < ! C-s M-z > Backspace Backspace C-s C-s C-a C-k
   d i f f SP - u SP e x e r 1 . h t m l SP e x e r 2 . h t m l Enter

Excercise 1.3
-------------
1. (implicit)
2. M-% t SP 1 Enter t SP 37 Enter SP SP Enter
3. M-< M-% U T F - 8 Enter U S - A S C I I Enter SP Enter
4. M-< C-s < / o C-a Enter
5. C-x C-c y Enter
   d i f f SP - u SP e x e r 1 . h t m l SP e x e r 3 . h t m l Enter

Excercise 1.4
-------------
1. c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l
2. (implicit)
3. M-> C-p C-p C-f C-SP C-e C-w M-g g 3 5 4 Enter C-y
4. C-s - < ! C-a C-k M-g g 1 8 Enter C-y
   C-s C-s C-a C-f C-k M-g g 93 Enter C-y
   C-s C-s C-a C-f M-z + M-g g 3 0 3 Enter
   C-y Backspace C-p C-f Backspace C-p C-f Backspace
   C-s < ! C-s C-b C-b M-z > M-g g 3 4 2 C-e C-b C-b C-b C-b C-b C-y
5. C-s --- C-a C-SP M-> C-w
6. C-x u
7. Enter - - > C-s --- C-s C-s C-a < ! - - Enter
   Since HTML does not have nested comments, I have been
   cutting the comments out instead of copying them.
   This way the duplicated HTML without comments can be commented away.
8. M-< M-% < o l > Enter < O l > Enter !
   There were seven instances of <ol>
9. d i f f SP - u SP e x e r 1 . h t m l SP e x e r 4 . h t m l >
   e x e r 4 . d i f f Enter

Excercise 1.5
-------------
1. C-x d C-u 8 Backspace Enter + j u n k Enter
2. C-x C-f h e l l o . c Enter (Enter C Program) C-x C-s
3. M-x compile Enter C-a C-k g c c SP h e l l o . c Enter
4. C-x b h e l l o - o u t Enter M-1 M-! . / a . o u t Enter
5. C-x o C-SP M-> C-w C-y
Output:
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c//
  char n = '%cn';%c  char b = '%c%c';%c  char q = '%c';%c//
  char const *p = %c%s%c;%c//
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c//
  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Excercise 1.6
-------------
1. C-x b Enter
2. ( r a n d o m ) C-j
3. (s e t q SP x SP ( r a n d o m ) ) C-j
   (s e t q SP y SP ( r a n d o m ) ) C-j
4. ( * x y ) C-j
   The result is not correct. Even though x and y were both positive,
   my result was negative. It is likely that this incorrect result
   is due to the integer overflowing.
5. M-: ( * SP x SP y ) Enter
   Now the result of the multiplication is displayed in the minibuffer
   in decimal, octal, and hex forms.
6. Although the numbers seem random and are practically indistinguishable
   from random to a human, the computer program that generates the numbers
   is determinitistic, thus the numbers are psuedorandom. The number is
   created using a seed from which mathemetical operations are done to generate
   a seemingly random result.
7. m o s t - p o s i t i v e - f i x n u m C-j
   m o s t - n e g a t i v e - f i x n u m C-j
   Using the above I found that the (random) function generates numbers between
   -2305843009213693952 and 2305843009213693951. This is the same as 2^61 - 1
   and -2^61 since as learned in CS 33, emacs uses 62-bit integers. This numbers
   are so large that the probability that the product of each is calculated
   correctly is nearly 100% with a neglible chance that it is correct by
   chance. Mathematically, as the max size of the numbers increase, the
   probability that their product will overflow approaches 1 due to the
   nature of multiplication.  In our case, the large size of the numbers
   well-satisfy this assumption.

